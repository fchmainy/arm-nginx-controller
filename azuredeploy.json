{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the VNET."
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Subnet where is located the private NIC of the Controller."
      }
    },
    "vmDnsName": {
      "type": "string",
      "metadata": {
        "description": "DNS Name for the Public IP. Must be lowercase."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Administrator of the VM"
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Password for the Controller WebUI and API."
        }
      },
    "controllerTarBallURL": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "URL pointing to the controller .tar.gz. to install"
        }
      },
    "controller_fqdn": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Controller FQDN"
        }
      },
    "userEmail": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "User Email Address for controller"
        }
      },
    "controllerLicense": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Association Token for Controller Licensing"
        }
      },
    "restrictedSrcAddress": {
            "metadata": {
                "description": "This field restricts management access to a specific network or address. Enter an IP address or address range in CIDR notation, or asterisk for all sources"
            },
            "type": "string"
        }
  },
  "variables": {
    "nicName": "myVMNic",
    "storageAccountType": "Standard_LRS",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSKU": "18.04-LTS",
    "vmSize": "Standard_D4_V2",
    "newStorageAccountName": "[concat(uniquestring(concat(resourceGroup().id, parameters('vmDnsName'))), 'storacct')]",
    "nsgName": "[concat(uniquestring(concat(resourceGroup().id, parameters('vmDnsName'))), '-nsg')]",
    "publicIPAddressName": "myPublicIP",
    "publicIPAddressType": "Dynamic",
    "vmName": "[parameters('vmDnsName')]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('newStorageAccountName')]",
      "apiVersion": "2019-06-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "StorageV2"
    },
    {
      "apiVersion": "2020-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('vmDnsName')]"
        }
      }
    },
    {
        "name": "[variables('nsgName')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "SSH",
              "properties": {
                "priority": 300,
                "protocol": "TCP",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "22"
              }
            },
            {
              "name": "HTTPS",
              "properties": {
                "priority": 320,
                "protocol": "TCP",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "443"
              }
            },
            {
              "name": "HTTP",
              "properties": {
                "priority": 340,
                "protocol": "TCP",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "80"
              }
            }
          ]
        },
        "tags": {}
      },
    {
      "apiVersion": "2020-06-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
              ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmName'),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/newuserscript')]",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/fchmainy/arm-nginx-controller/main/install-controller.sh"
          ],
          "commandToExecute": "[concat('sudo sh install-controller.sh ', ' ', parameters('controllerTarBallURL'), ' ', parameters('controller_fqdn'), ' ', parameters('adminUsername'), ' ', parameters('adminPassword'), ' ', parameters('userEmail'), ' ', parameters('controllerLicense'))]"
        }
      }
    }
  ]
}